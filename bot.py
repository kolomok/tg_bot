import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

# ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω –∞–ø–¥–µ–π—Ç –æ—Ç {update.effective_user.id}")
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—Å—ë –æ–∫.")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    load_dotenv()

    TOKEN = os.environ.get("BOT_TOKEN")
    RENDER_HOSTNAME = os.environ.get("RENDER_EXTERNAL_HOSTNAME")
    PORT = int(os.environ.get("PORT", 8443))

    if not TOKEN or not RENDER_HOSTNAME:
        raise ValueError("BOT_TOKEN –∏–ª–∏ RENDER_EXTERNAL_HOSTNAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

    logging.info(f"üåê –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ https://{RENDER_HOSTNAME}/webhook, –ø–æ—Ä—Ç {PORT}")

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))

    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=f"https://{RENDER_HOSTNAME}/webhook"
    )